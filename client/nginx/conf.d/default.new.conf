#
# apsbase.com
#
server {
    server_name  apsbase.com;
    server_name  www.apsbase.com;

    client_max_body_size  200M;
    proxy_read_timeout 300;
    proxy_connect_timeout 300;
    proxy_send_timeout 300;

    access_log  /var/log/nginx/www.apsbase.com-access.log  main;
    error_log   /var/log/nginx/www.apsbase.com-error.log notice;

    location / {
        root   /var/www/trial_p2p/trial_p2p/client/dist;
        index  index.html;
        try_files $uri $uri/ /index.html;
    }

    location /peer {
        proxy_pass http://127.0.0.1:9500/peer;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # WebSocket support (nginx 1.4)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # location /api {
    #     proxy_pass http://127.0.0.1:3000/api;
    # }

    # location /bright-century {
    #     proxy_pass http://127.0.0.1:9000/bright-century;
    # }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    # #
    # location ~ \.php$ {
    #     root           /var/www/bright-century;
    #     fastcgi_pass   php-fpm;
    #     fastcgi_index  index.php;
    #     fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
    #     include        fastcgi_params;
    # }

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/www.apsbase.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/www.apsbase.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
    if ($host = www.apsbase.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    listen 80;
    server_name  apsbase.com;
    server_name  www.apsbase.com;
    return 404; # managed by Certbot
}
